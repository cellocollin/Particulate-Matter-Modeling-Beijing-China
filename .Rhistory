knitr::opts_chunk$set(echo = TRUE)
#load libraries
library("tidyverse")
library("lubridate")
library("lubridate")
library("ggplot2")
library(dplyr)
#Read and check data
Pollution<-read.csv("Final Project Data.csv",header=TRUE)
head(Pollution)
names(Pollution)
summary(Pollution)
# Change TEMP and PRES as numeric
Pollution$TEMP<-as.numeric(Pollution$TEMP)
Pollution$PRES<-as.numeric(Pollution$PRES)
summary(Pollution)
#Create date-time column for hourly data
Pollution$Date_H=with(Pollution, ymd_h(paste(Year, Month, Day, Hour, sep= ' ')))
#Create date column for daily data
Pollution$Date_D=with(Pollution, ymd(paste(Year, Month, Day)))
Pollution[1:5,]
#Hourly Plots
Pollution %>%
ggplot(aes(Date_H,PM2.5))+ geom_line()
# Build Daily data
Pollution_Daily<-Pollution %>%
group_by(Date_D) %>%
summarise(
Avg_Day_PM2.5=mean(PM2.5,na.rm=TRUE),
Avg_Day_DEWP=mean(DEWP,na.rm=TRUE),
Avg_Day_TEMP=mean(TEMP,na.rm=TRUE),
Avg_Day_PRES=mean(PRES,na.rm=TRUE),
Max_Day_LWS=max(LWS,na.rm=TRUE),
Max_Day_LS=max(LS,na.rm=TRUE),
Max_Day_LR=max(LR,na.rm=TRUE),
Max_Day_CBWD=nth(CBWD,which.max(LWS)))
# Convert Daily table to a data frame
Pollution_Daily=as.data.frame(Pollution_Daily)
# Check data structure and data summary
str(Pollution_Daily)
summary(Pollution_Daily)
# Daily Plots
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_PM2.5)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_DEWP)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_TEMP)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_PRES)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LWS)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LS)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LR)) +
geom_line()
#Use functions year, month and day to create Year, Month and Day Columns
Pollution_Daily$Year=year(Pollution_Daily$Date_D)
Pollution_Daily$Month=month(Pollution_Daily$Date_D)
Pollution_Daily$Day=day(Pollution_Daily$Date_D)
head(Pollution_Daily)
#Fix NaN values in PM2.5 and set to NAs
Pollution_Daily$Avg_Day_PM2.5[is.nan(Pollution_Daily$Avg_Day_PM2.5)]<-NA
library(lars)
library(sm)
library(sm)
library(leaps)
library(stats)
library(pls)
library("tidyverse")
library("lubridate")
library("ggplot2")
library(dplyr)
library(faraway)
library(faraway)
library(lmtest)
library(nlme)
#Read and check data
Pollution<-read.csv("Final Project Data.csv",header=TRUE)
head(Pollution)
names(Pollution)
summary(Pollution)
summary(Pollution)
# Change TEMP and PRES as numeric
Pollution$TEMP<-as.numeric(Pollution$TEMP)
# Change TEMP and PRES as numeric
Pollution$TEMP<-as.numeric(Pollution$TEMP)
Pollution$PRES<-as.numeric(Pollution$PRES)
summary(Pollution)
summary(Pollution)
#Create date-time column for hourly data
Pollution$Date_H=with(Pollution, ymd_h(paste(Year, Month, Day, Hour, sep= ' ')))
#Create date-time column for hourly data
Pollution$Date_H=with(Pollution, ymd_h(paste(Year, Month, Day, Hour, sep= ' ')))
#Create date column for daily data
Pollution$Date_D=with(Pollution, ymd(paste(Year, Month, Day)))
Pollution[1:5,]
Pollution[1:5,]
#Hourly Plots
Pollution %>%
ggplot(aes(Date_H,PM2.5))+ geom_line()
#Create date-time column for hourly data
Pollution$Date_H=with(Pollution, ymd_h(paste(Year, Month, Day, Hour, sep= ' ')))
#Create date column for daily data
Pollution$Date_D=with(Pollution, ymd(paste(Year, Month, Day)))
Pollution[1:5,]
#Hourly Plots
Pollution %>%
ggplot(aes(Date_H,PM2.5))+ geom_line()
# Build Daily data
Pollution_Daily<-Pollution %>%
group_by(Date_D) %>%
summarise(
Avg_Day_PM2.5=mean(PM2.5,na.rm=TRUE),
Avg_Day_DEWP=mean(DEWP,na.rm=TRUE),
Avg_Day_TEMP=mean(TEMP,na.rm=TRUE),
Avg_Day_PRES=mean(PRES,na.rm=TRUE),
Max_Day_LWS=max(LWS,na.rm=TRUE),
Max_Day_LS=max(LS,na.rm=TRUE),
Max_Day_LR=max(LR,na.rm=TRUE),
Max_Day_CBWD=nth(CBWD,which.max(LWS)))
# Build Daily data
Pollution_Daily<-Pollution %>%
group_by(Date_D) %>%
summarise(
Avg_Day_PM2.5=mean(PM2.5,na.rm=TRUE),
Avg_Day_DEWP=mean(DEWP,na.rm=TRUE),
Avg_Day_TEMP=mean(TEMP,na.rm=TRUE),
Avg_Day_PRES=mean(PRES,na.rm=TRUE),
Max_Day_LWS=max(LWS,na.rm=TRUE),
Max_Day_LS=max(LS,na.rm=TRUE),
Max_Day_LR=max(LR,na.rm=TRUE),
Max_Day_CBWD=nth(CBWD,which.max(LWS)))
# Convert Daily table to a data frame
Pollution_Daily=as.data.frame(Pollution_Daily)
#Hourly Plots
Pollution %>%
ggplot(aes(Date_H,PM2.5))+ geom_line()
# Build Daily data
Pollution_Daily<-Pollution %>%
group_by(Date_D) %>%
summarise(
Avg_Day_PM2.5=mean(PM2.5,na.rm=TRUE),
Avg_Day_DEWP=mean(DEWP,na.rm=TRUE),
Avg_Day_TEMP=mean(TEMP,na.rm=TRUE),
Avg_Day_PRES=mean(PRES,na.rm=TRUE),
Max_Day_LWS=max(LWS,na.rm=TRUE),
Max_Day_LS=max(LS,na.rm=TRUE),
Max_Day_LR=max(LR,na.rm=TRUE),
Max_Day_CBWD=nth(CBWD,which.max(LWS)))
# Convert Daily table to a data frame
Pollution_Daily=as.data.frame(Pollution_Daily)
# Check data structure and data summary
str(Pollution_Daily)
# Check data structure and data summary
str(Pollution_Daily)
summary(Pollution_Daily)
# Daily Plots
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_PM2.5)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_DEWP)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_DEWP)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_TEMP)) +
geom_line()
# Daily Plots
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_PM2.5)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_DEWP)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_TEMP)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Avg_Day_PRES)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LWS)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LS)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LR)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LWS)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LS)) +
geom_line()
ggplot(Pollution_Daily, aes(Date_D, Max_Day_LR)) +
geom_line()
#Use functions year, month and day to create Year, Month and Day Columns
Pollution_Daily$Year=year(Pollution_Daily$Date_D)
#Use functions year, month and day to create Year, Month and Day Columns
Pollution_Daily$Year=year(Pollution_Daily$Date_D)
Pollution_Daily$Month=month(Pollution_Daily$Date_D)
Pollution_Daily$Month=month(Pollution_Daily$Date_D)
Pollution_Daily$Day=day(Pollution_Daily$Date_D)
Pollution_Daily$Day=day(Pollution_Daily$Date_D)
head(Pollution_Daily)
head(Pollution_Daily)
#Fix NaN values in PM2.5 and set to NAs
Pollution_Daily$Avg_Day_PM2.5[is.nan(Pollution_Daily$Avg_Day_PM2.5)]<-NA
Pollution_Daily
par(mfrow=c(2,2))
plot(lm_all)
##Fitting Full Model
lm_all=lm(Avg_Day_PM2.5~.,data=Pollution_Daily)
plot(lm_all)
test_error_assumptions(lm_all)
##Functions to make Diagnostics Easier
test_error_assumptions<-function(x){
b=bptest(x)$p.value
c=shapiro.test(residuals(x))$p.value
d=dwtest(x)$p.value
a=data.frame("Homocedasticity",b>0.05,"Normality",c>0.05,"Uncorrelated Errors",d>0.05)
return(a)
}
test_leverage<-function(x){
n=nrow(model.matrix(x)); p=ncol(model.matrix(x));
lev=influence(x)$hat
a=lev[lev>2*p/n]
return(a)
}
test_outlier<-function(x){
n=nrow(model.matrix(x)); p=ncol(model.matrix(x));
jack=rstudent(x)
b=jack[abs(jack)>abs(qt(.05/(2*n), n-p-1))]
c=qt(.05/(2*n), n-p-1)
d=">"
a=data.frame(b,d,c)
return(a)
}
test_influence<-function(x){
cook=cooks.distance(x)
b=cook[cook>1]
a=data.frame(b)
return(a)
}
test_error_assumptions(lm_all)
bptest(lm_all)
shapiro.test(residuals(lm_all))
dwtest(lm_all)
test_influence(lm_all)
test_leverage(lm_all)
test_outlier(lm_all)
nrow(model.matrix(lm_all));lm_all
ncol(model.matrix(x))
ncol(model.matrix(lm_all)
ncol(model.matrix(lm_all)
ncol(model.matrix(lm_all))
library(faraway);library(ggplot2);data(infmort);ggplot(infmort,aes(x=region))+geom_bar();ggplot(infmort,aes(x=oil))+geom_bar()
out=lm(mortality~. ,data=infmort);
summary(out)
ggplot(infmort,aes(x=oil,y=income))+geom_boxplot();ggplot(infmort,aes(x=region,y=income))+geom_boxplot()
plot(out,which=1);plot(out,which=2)
library(lmtest)
shapiro.test(residuals(out));bptest(out)
infmort
ncol(model.matrix(out))
n=105; p=3;
lev=influence(out)$hat
lev[lev>2*p/n]
model.matrix(out)
influence(out)
model.matrix(out)
nrow(lm_all)
nrow(Pollution_Daily)
Pollution_Daily
test_outlier(lm_all)
test_outlier<-function(x){
n=nrow(model.matrix(x)); p=ncol(model.matrix(x));
jack=rstudent(x)
b=jack[abs(jack)>abs(qt(.05/(2*n), n-p-1))]
c=abs(qt(.05/(2*n), n-p-1))
d=">"
a=data.frame(b,d,c)
return(a)
}
test_outlier(lm_all)
##Checking Interaction Term Significance
anova(lm_all)
summary(lm_all)
boxcox(lm_all)
library(MASS);boxcox(lm_all)
Pollution_Daily
summary(lm_all)
head(Pollution_Daily)
summary(lm_all)
